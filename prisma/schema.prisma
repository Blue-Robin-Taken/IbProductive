generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  passHash     String
  username     String         @unique
  isAdmin      Boolean        @default(false)
  clientTasks  ClientTask[]
  UsersInClass UsersInClass[]

  @@unique([id, username])
}

model Class {
  id   Int    @id @default(autoincrement())
  name String @unique

  UsersInClass UsersInClass[]
  tasks        ClientTask[]
}

model UsersInClass {
  class   Class @relation(fields: [classId], references: [id])
  classId Int

  user     User   @relation(fields: [userId, username], references: [id, username])
  userId   Int
  username String

  @@id([classId, userId])
}

model ClientTask {
  user     User   @relation(fields: [username], references: [username])
  username String

  id          String    @id @default(cuid())
  name        String
  description String?
  date        DateTime
  labels      String[]
  bools       Boolean[]

  nameEditable Boolean
  descEditable Boolean
  dateEditable Boolean
  isDeletable  Boolean

  Class   Class? @relation(fields: [classId], references: [id])
  classId Int?
}

model VerificationToken {
  id        Int      @id @default(autoincrement())
  email     String
  token     String   @unique
  passHash  String
  username  String
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Feedback {
  id          Int      @id @default(autoincrement())
  email       String
  title       String?
  description String
  createdAt   DateTime @default(now())
}
